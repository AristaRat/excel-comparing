/**
 * appears when Option Three is chosen in game menu
 *
 * modified     20220823
 * date         20220823
 *
 * @filename OptionThree.java
 * @author juliezhang
 * @version 1.0
 */

import javax.swing.ImageIcon;
import java.util.Random;

public class OptionThree extends javax.swing.JFrame {

    // imports all the images used in this program
    ImageIcon rockIcon = new ImageIcon(getClass().getResource("Rock.png"));
    ImageIcon scissorsIcon = new ImageIcon(getClass().getResource("Scissors.png"));
    ImageIcon paperIcon = new ImageIcon(getClass().getResource("Paper.png"));

    // creates a score counter 
    int scoreOne = 0;
    int scoreTwo = 0;

    /**
     * Creates new form OptionTwo
     */
    public OptionThree() {
        initComponents();

        // delete the text in these labels
        labelOne.setText("");
        labelTwo.setText("");
        result.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        explaination = new javax.swing.JLabel();
        labelTwo = new javax.swing.JLabel();
        labelOne = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        result = new javax.swing.JLabel();
        play = new javax.swing.JButton();
        quit = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        jLabel1.setText("Player One");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        jLabel2.setText("Player Two");

        explaination.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        explaination.setText("Press PLAY to generate a random move for both players, press QUIT to quit.");

        labelTwo.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        labelTwo.setText("     EMPTY");

        labelOne.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        labelOne.setText("EMPTY");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 50)); // NOI18N
        jLabel5.setText("VS");

        result.setFont(new java.awt.Font("Helvetica Neue", 0, 40)); // NOI18N
        result.setText("EMPTY");

        play.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        play.setText("PLAY");
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        quit.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        quit.setText("QUIT");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(result)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelOne, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(play))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quit)
                            .addComponent(labelTwo))
                        .addGap(0, 106, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(explaination)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(quit))
                    .addComponent(play, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelOne, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)))
                .addGap(29, 29, 29)
                .addComponent(result)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(explaination, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed

        // variables that stores player one and two's moves
        String playerOne;
        String playerTwo;

        // randomly selects "rock" "paper" or "scissors" for player one's move, changes labelOne based on the move
        int randomOne = (int) (Math.random() * 3);

        switch (randomOne) {
            case 0 -> {
                labelOne.setIcon(rockIcon);
                playerOne = "rock";
            }
            case 1 -> {
                labelOne.setIcon(paperIcon);
                playerOne = "paper";
            }
            default -> {
                labelOne.setIcon(scissorsIcon);
                playerOne = "scissors";
            }
        }

        // randomly selects "rock" "paper" or "scissors" for player two's move, changes labelTwo based on the move
        String[] arr = {"A", "B", "C"};
        Random random = new Random();
        int randomTwo = random.nextInt(arr.length);

        if (arr[randomTwo].equals("A")) {
            labelTwo.setIcon(rockIcon);
            playerTwo = "rock";
        } else if (arr[randomTwo].equals("B")) {
            labelTwo.setIcon(paperIcon);
            playerTwo = "paper";
        } else {
            labelTwo.setIcon(scissorsIcon);
            playerTwo = "scissors";
        }

        // decides whether the game result is a tie, player one won, or player two won
        if (playerOne.equals(playerTwo)) {
            result.setText("It's a tie!");
        } else if ((playerOne.equals("rock") && playerTwo.equals("scissors"))
                || (playerOne.equals("scissors") && playerTwo.equals("paper"))
                || (playerOne.equals("paper") && playerTwo.equals("rock"))) {
            result.setText("Player one won!");
            scoreOne++;
        } else {
            result.setText("Player two won!");
            scoreTwo++;
        }

        // switches to player one win screen when player one won 2 rounds, player two win screen when player two won 2 rounds
        if (scoreOne == 2) {
            dispose();
            new PlayerOne().setVisible(true);
        } else if (scoreTwo == 2) {
            dispose();
            new PlayerTwo().setVisible(true);
        }

    }//GEN-LAST:event_playActionPerformed

    private void quitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitActionPerformed

        // gets rid of this screen
        dispose();

        // makes game ending screen visible
        new OptionFour().setVisible(true);
    }//GEN-LAST:event_quitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OptionTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OptionTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OptionTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OptionTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OptionTwo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel explaination;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel labelOne;
    private javax.swing.JLabel labelTwo;
    private javax.swing.JButton play;
    private javax.swing.JButton quit;
    private javax.swing.JLabel result;
    // End of variables declaration//GEN-END:variables
}
